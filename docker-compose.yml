services:
  app:
    build:
    contex: .
    dockerfile: Dockerfile
    target: prod
  restart: unless-stopped
  ports:
    - ${PORT}:${PORT}
  environment:
    APP_ENV: ${APP_ENV}
    PORT: ${PORT}
    GOWORKOUT_DB_HOST: ${GOWORKOUT_DB_HOST}
    GOWORKOUT_DB_PORT: ${GOWORKOUT_DB_PORT}
    GOWORKOUT_DB_DATABASE: ${GOWORKOUT_DB_DATABASE}
    GOWORKOUT_DB_USERNAME= ${GOWORKOUT_DB_USERNAME}
    GOWORKOUT_DB_PASSWORD= ${GOWORKOUT_DB_PASSWORD}
    GOWORKOUT_DB_SCHEMA= ${GOWORKOUT_DB_SCHEMA}
  depends_on:
    psql_goworkout:
      condition: service_healthy
  networks:
    - goworkout
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - 5173:5173
    networks:
      - goworkout
  psql_goworkout:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${GOWORKOUT_DB_DATABASE}
      POSTGRES_USER: ${GOWORKOUT_DB_USERNAME}
      POSTGRES_PASSWORD: ${GOWORKOUT_DB_PASSWORD}
    ports:
      - "${GOWORKOUT_DB_PORT}:5432"
    volumes:
      - psql_volume_goworkout:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${BLUEPRINT_DB_USERNAME} -d {BLUEPRINT_DB_DATABASE}'"]
      interval: 5s
      timeout: 5s
      reties: 3
      start_period: 15s
    networks:
      - goworkout

volumes:
  psql_volume_goworkout:
networks:
  goworkout:
